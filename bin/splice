#!/usr/bin/env bash

# Function to display help message
show_help() {
    echo "Usage: splice [OPTIONS] FILE1 FILE2 [FILE3 ...]"
    echo
    echo "Splice multiple video files together using FFmpeg."
    echo
    echo "Options:"
    echo "  -h, --help              Show this help message and exit"
    echo "  -o, --output-dir DIR    Specify the output directory for the spliced video"
    echo "  -f, --output-file FILE  Specify the complete output file path (overrides -o)"
    echo
    echo "The output file will be named using a composite of the input file names."
}

# Check if FFmpeg is installed
if ! command -v ffmpeg &> /dev/null; then
    echo "Error: FFmpeg is not installed. Please install FFmpeg to use this script."
    exit 1
fi

# Initialize output directory and output file variables
output_dir=""
output_file=""

# Parse command-line options
while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_help
            exit 0
            ;;
        -o|--output-dir)
            if [[ -n "$2" && "$2" != -* ]]; then
                output_dir="$2"
                shift 2
            else
                echo "Error: Argument for $1 is missing" >&2
                exit 1
            fi
            ;;
        -f|--output-file)
            if [[ -n "$2" && "$2" != -* ]]; then
                output_file="$2"
                shift 2
            else
                echo "Error: Argument for $1 is missing" >&2
                exit 1
            fi
            ;;
        *)
            break
            ;;
    esac
done

# Check if at least two input files are provided
if [ $# -lt 2 ]; then
    echo "Error: At least two input files are required."
    show_help
    exit 1
fi

# Create output directory if it doesn't exist and output_file is not specified
if [[ -n "$output_dir" && -z "$output_file" ]]; then
    mkdir -p "$output_dir"
fi

# If output_file is specified, extract its directory and create it if it doesn't exist
if [[ -n "$output_file" ]]; then
    output_dir=$(dirname "$output_file")
    mkdir -p "$output_dir"
fi

# Create a temporary file to store the list of input files
input_list=$(mktemp)

# Generate the output filename and populate the input list
output_name=""
for file in "$@"; do
    if [ ! -f "$file" ]; then
        echo "Error: File not found: $file"
        rm "$input_list"
        exit 1
    fi
    # Get the absolute path of the file
    abs_file=$(cd "$(dirname "$file")" && pwd -P)/$(basename "$file")
    printf "file '%s'\n" "$abs_file" >> "$input_list"
    base_name=$(basename "$file")
    output_name="${output_name}${base_name%.*}_"
done

# Set the full output path
if [[ -n "$output_file" ]]; then
    output_path="$output_file"
elif [[ -n "$output_dir" ]]; then
    # Remove the trailing underscore and add the extension
    output_name="spliced_${output_name%_}.mp4"
    output_path="$output_dir/$output_name"
else
    # Remove the trailing underscore and add the extension
    output_name="spliced_${output_name%_}.mp4"
    output_path="$output_name"
fi

# Splice the videos using FFmpeg
ffmpeg -f concat -safe 0 -i "$input_list" -c copy "$output_path"

# Check if FFmpeg was successful
if [ $? -eq 0 ]; then
    echo "Video splicing complete. Output file: $output_path"
else
    echo "Error: Video splicing failed."
fi

# Clean up the temporary file
rm "$input_list"
